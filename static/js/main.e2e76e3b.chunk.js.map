{"version":3,"sources":["TMBD.js","components/Row/Row.js","components/Header/Header.js","components/Nav/Nav.js","App.js","index.js"],"names":["API_KEY","peticion","endpoint","a","fetch","res","json","getHomeList","slug","title","items","Row","useState","margin","setMargin","className","onClick","x","style","fontSize","max","results","length","window","innerWidth","marginLeft","width","map","i","key","src","poster_path","alt","name","Header","data","year","Date","first_air_date","genres","push","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","Nav","color","App","setData","done","setDone","headerData","setHeaderData","setColor","useEffect","TMBD","lista","console","log","header","filter","random","Math","floor","escogida","loadData","scrollListener","scrollY","addEventListener","removeEventListener","Listas","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2e76e3b.chunk.js","sourcesContent":["// api TMDB\nconst API_KEY = 'c8092bbfc6c1ade73867b2e30c7323ea';\n// base end-point\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n// funcion para no escribir tanto\nconst peticion = async (endpoint)=>{\n        const res = await fetch(`${API_BASE}${endpoint}`);\n        const json = await res.json();\n        return json;\n} \n\n//objeto que contiene casi toda la info *O*\nexport default {\n        getHomeList: async ()=>{\n                return [\n                        {\n                                slug: 'originals',\n                                title: 'originales de netflix',\n                                items: await peticion(`/discover/tv?with_network=213&language=pt-US&api_key=${API_KEY}`)\n                        },\n                        {\n                                slug: 'trending',\n                                title: 'Recomendados para ti',\n                                items: await peticion(`/trending/all/week?language=pt-US&api_key=${API_KEY}`)\n                        },\n                        {\n                                slug: 'toprated',\n                                title: 'Top',\n                                items: await peticion(`/movie/top_rated?language=pt-US&api_key=${API_KEY}`)\n                        },\n                        {\n                                slug: 'action',\n                                title: 'Accion',\n                                items: await peticion(`/discover/movie?with_genres=28&language=pt-US&api_key=${API_KEY}`)\n                        },\n                        {\n                                slug: 'comedy',\n                                title: 'Comedia',\n                                items: await peticion(`/discover/movie?with_genres=35&language=pt-US&api_key=${API_KEY}`)\n                        },\n                        {\n                                slug: 'horror',\n                                title: 'Terror',\n                                items: await peticion(`/discover/movie?with_genres=27&language=pt-US&api_key=${API_KEY}`)\n                        },\n                        {\n                                slug: 'romance',\n                                title: 'Romance',\n                                items: await peticion(`/discover/movie?with_genres=10749&language=pt-US&api_key=${API_KEY}`)\n                        },\n                        {\n                                slug: 'documentary',\n                                title: 'Documentales',\n                                items: await peticion(`/discover/movie?with_genres=99&language=pt-US&api_key=${API_KEY}`)\n                        }\n                ]\n        }\n}\n","import React,{ useState  } from 'react';\nimport './Row.css'\n//material UI\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\nconst Row = ({ title, items})=>{\n\n        const [margin, setMargin] = useState(-400);\n\n        const right = ()=> {\n                let x = margin - 150;\n                let max = items.results.length *150;\n                if((window.innerWidth - max) >x){\n                        x= (window.innerWidth - max) - 60;\n                }\n                setMargin(x)\n\n        } \n\n        const left = ()=> {\n                let x = margin + 150;\n                if(x >0){\n                        x=0\n                }\n                setMargin(x)\n\n        }\n\n        return(\n                <div className='movie'>\n                        <h1>{title}</h1>\n                        <div className=\"left\" onClick={left}>\n                                <ArrowBackIosIcon style={{ fontSize: 30  }} ></ArrowBackIosIcon>\n                        </div>\n                        <div className=\"right\" onClick={right}>\n                                <KeyboardArrowRightIcon style={{ fontSize: 50  }}></KeyboardArrowRightIcon>\n                        </div>\n                        <div className='movierow'>\n                                <div className=\"row\" style={{ marginLeft: margin, width: items.results.length * 150  }}>\n                                        {\n                                        items.results.map((i,key)=>(\n                                        <div key={key} className='item'>\n                                                <img src={`https://image.tmdb.org/t/p/w300${i.poster_path}`} alt={i.name ? i.name : i.title } />\n                                                <p>{i.name ? i.name : i.title}</p>\n                                        </div>\n                                        ))\n                                        }\n                                </div>\n                        </div>\n                </div>\n                );\n}\n\nexport default Row; \n","import React from 'react';\nimport './Header.css';\n\nconst Header = ({ data  })=>{\n\n\t\tlet year = new Date(data.first_air_date);\n\t\tlet genres = [];\n\t\tfor(let i in data.genres){\n\t\t\tgenres.push(data.genres[i].name);\n\t\t}\n\n        return(\n                <section className=\"header\" style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original${data.backdrop_path})`  }}>\n                        <div className='vertical'>\n\t                        <div className='horizontal'>\n\t                        \t<div className='name'>{data.original_name}</div>\n\t                        \t<div className='info'>\n\t                        \t\t<div className='points'>{data.vote_average} puntos</div>\n\t                        \t\t<div className='year'>{year.getFullYear()}</div>\n\t                        \t\t<div className='seasons'>{data.number_of_seasons} Temporadas</div>\n\t                        \t</div>\n\t                        \t<div className='description'>\n\t                        \t\t{data.overview}\n\t                        \t</div>\n\t                            <div className='botones'>\n\t                        \t\t<a href={`/wacth/${data.id}`} className='ver' > * Ver </a>\n\t                        \t\t<a href={`/list/add${data.id}`} className='lista'> + Mi lista </a>\n\t                        \t</div>\n\t                        \t<div className='generos'>\n\t                        \t\t<strong>Géneros</strong> {genres.join(',')}\n\t                        \t</div>\n\t                        </div>\n                        </div>\n                </section>\n                );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Nav.css';\nconst Nav = ({ color  }) =>{\n        return(\n                <div className={color ? \"nav black\" : \"nav\"}>\n                        <div className=\"logo\">\n                                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\" alt=\"logo\" />\n                        </div>\n                        <div className=\"user\">\n                                <a href=\"/\">\n                                        <img src=\"https://lh3.googleusercontent.com/a-/AOh14Ghr_HNYLOzm3HdMt52DvHak-EvS9aFse93mlOlVgyU=s88-c-k-c0x00ffffff-no-rj-mo\" alt=\"user\" />\n                                </a>\n                        </div>\n                </div>\n                );\n}\n\nexport default Nav;\n","import React,{ useState, useEffect } from 'react';\nimport TMBD from './TMBD';\n//styles\nimport './App.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n//components\nimport Row from './components/Row/Row';\nimport Header from './components/Header/Header';\nimport Nav from './components/Nav/Nav';\n\nconst App = ()=>{\n\n        const [data, setData ] = useState([]);\n        const [done, setDone] = useState(false)\n        const [headerData, setHeaderData ] = useState([]);\n        const [color, setColor ]= useState(false);\n        useEffect(()=>{\n                const loadData =  async()=>{\n                        let lista = await TMBD.getHomeList();\n                        console.log(lista);\n                        setDone(true);\n                        setData(lista);\n\n                        let header = lista.filter( i=> i.slug === 'originals');\n                        let random = Math.floor(Math.random() * (header[0].items.results.length -1));\n                        let escogida = header[0].items.results[random];\n\n                        console.log(escogida);\n                        setHeaderData(escogida);\n                }\n                loadData();\n        },[]);\n\n        useEffect(()=>{\n                const scrollListener = () =>{\n                        if(window.scrollY > 15){\n                                setColor(true);\n                        }else{\n                                setColor(false);\n                        }\n                }\n                \n                window.addEventListener('scroll', scrollListener);\n\n                return () =>{\n                  window.removeEventListener('scroll', scrollListener);\n                  };\n                \n        },[])\n\n        const Listas = ()=>{\n                return(\n                        <>\n                                {data.map((i, key)=>(  \n                                <Row key={key} title={i.title} items={i.items} />\n                                ))\n                                }\n                        </>\n                        );\n        }\n\n        return(\n                <div className=\"page\">\n                {done ?\n                       (<>\n                        <Nav color={color} />\n                        <Header data={headerData} />\n                        <section className=\"lists\">\n                                <Listas />\n                        </section></>) : \n                        (\n                                <div className=\"circular\">\n                                        <CircularProgress color=\"secondary\" />\n                                </div>\n                        ) }\n                </div>\n                );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}